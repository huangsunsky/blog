<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>redis on cheon&#39;s blog</title>
    <link>https://www.cheon.site/blog/tags/redis/</link>
    <description>Recent content in redis on cheon&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 13 Aug 2018 11:07:55 +0800</lastBuildDate>
    
	<atom:link href="https://www.cheon.site/blog/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Redis Somaxconn</title>
      <link>https://www.cheon.site/blog/solved/redis_somaxconn/</link>
      <pubDate>Mon, 13 Aug 2018 11:07:55 +0800</pubDate>
      
      <guid>https://www.cheon.site/blog/solved/redis_somaxconn/</guid>
      <description>kubernetes redis 最大连接数设置 应用在进行压力测试的时候发现请求多（5000并发）的时候会报出redis连接超时错误，查看了redis的配置，发现如下配置：
# TCP listen() backlog. # # In high requests-per-second environments you need an high backlog in order # to avoid slow clients connections issues. Note that the Linux kernel # will silently truncate it to the value of /proc/sys/net/core/somaxconn so # make sure to raise both the value of somaxconn and tcp_max_syn_backlog # in order to get the desired effect. tcp-backlog 511 从这个配置可以看到，reids的最大连接数配置了511，所以应该将这个配置调高。注释里有提醒这个配置会受到linux内核配置的限制，查看/proc/sys/net/core/somaxconn，发现这个值只有128，所以redis配置tcp-backlog 511并没有生效，实际值只有128。
由于这里的redis是通过kubernetes部署的，所以需要同时修改宿主机和容器的内核参数。由于集群中有许多主机，所以我们通过为三台节点添加标签和污点来搭建redis等中间件应用并且防止其他应用部署到这些节点。通过查阅资料发现要修改k8s部署的容器的内核参数，需要开启kubelet的配置。所以具体操作分为四步：</description>
    </item>
    
  </channel>
</rss>